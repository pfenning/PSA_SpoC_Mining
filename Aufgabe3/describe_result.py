import numpy as np
from TripInSpace import TripInSpace
from SpoC_Constants import T_DAUER, TIME_TO_MINE_FULLY

solution = np.array([0.0, 14.0, 61.28207075521709, 111.41137982724788, 151.70492923237538, 214.92548506959784, 255.5620200033597, 303.6338138842686, 345.701608551082, 397.0565159657718, 430.07528382973635, 468.7967699288105, 518.6456772717185, 559.7428115411301, 600.1202530699098, 651.3742889441085, 693.4768619406931, 739.5892146562534, 777.4186451755528, 802.3528722806924, 847.0176614633729, 902.5071071197408, 939.6580399947643, 969.2568748405132, 1013.5097974811109, 1036.4555356977846, 1079.627345447965, 1128.3403979981058, 1171.2838747501492, 1210.3142472634565, 1252.683812305268, 1293.636433881341, 1329.1607087698676, 1368.6655449553746, 1421.8741068440868, 1469.2535038513472, 1509.3221424975013, 1569.6491794487347, 1603.7796941426009, 1649.0685379994238, 1686.250022062584, 1737.4297874765093, 1772.3563114649482, 1821.2285247892064, 0.0, 27.28207075521709, 26.1293090720308, 26.293549405127493, 35.220555837222456, 22.636534933761844, 28.071793880908917, 24.06779466681343, 29.354907414689773, 17.018767863964566, 22.72148609907412, 21.84890734290797, 29.097134269411644, 26.377441528779777, 29.254035874198618, 24.102572996584616, 28.112352715560267, 23.82943051929947, 10.934227105139545, 28.664789182680515, 29.489445656367984, 17.15093287502354, 17.5988348457489, 28.252922640597756, 12.94573821667362, 21.171809750180362, 26.713052550140944, 28.943476752043402, 21.030372513307462, 24.36956504181156, 16.95262157607288, 17.52427488852669, 19.50483618550705, 29.208561888712282, 23.379397007260412, 26.068638646154064, 32.32703695123327, 22.1305146938661, 25.288843856822982, 23.181484063160326, 27.179765413925317, 18.926523988438866, 28.872213324258052, 5.7714752107935965, 2270, 831, 3235, 7824, 2501, 5929, 371, 6558, 854, 2646, 2628, 7060, 8078, 9194, 4315, 1706, 1219, 707, 4669, 2863, 1313, 6686, 294, 3965, 8764, 958, 6018, 2, 9732, 2623, 7122, 7777, 5120, 6856, 8123, 8812, 3734, 6219, 5719, 189, 8829, 5914, 3471, 6304])
idx_split1 = int(len(solution)/3)
idx_split2 = 2*idx_split1
t_arr_test = solution[:idx_split1]
t_m_test = solution[idx_split1:idx_split2]
a_test = [int(a_now) for a_now in solution[idx_split2:]]

trip = TripInSpace(t_arr_test, t_m_test, a_test)
trip.pretty()

print(f"Erreichtes Gütemaß: {trip.get_score(len(a_test)-1):.2f}")
print(f"Bestand am Ende: {trip.bestand[-1]}")
print(f"Mittlere Zeit eines Flugs + eines Abbaus: {T_DAUER/(len(a_test)-1):.2f}")
print(f"Mittlere Flugzeit: {np.mean([trip.get_tof(i) for i in range(1,len(a_test))]):.2f}")
print(f"Mittlere Abbauzeit (ohne Startasteroiden): {np.mean(trip.t_m[1:]):.2f}")
print(f"Verhältnis Zeit mit der Rohstoffe (ohne Tank) abgebaut wurde im Verhältnis zur Gesamtzeit: {np.sum(trip.bestand[-1][:3])*TIME_TO_MINE_FULLY/T_DAUER:.2f}")
print(f"Wie viel Material wurde zurückgelassen: {trip.get_all_missed_materials_yet(len(a_test)-1):.2f}")
print(f"Mittlere Masse der angeflogenen Asteroiden: {np.mean([[trip.get_mass(i) for i in range(1,len(a_test))]]):2f}")
print(f"Flugzeiten: {[trip.get_tof(i) for i in range(1,len(a_test))]}")
print(f"Verbrauchtes DV: {trip.dv}")